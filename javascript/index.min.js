document.addEventListener("DOMContentLoaded",(function(){var e=null,t=null,n=null,o=null,a={},l=window.cy=cytoscape({wheelSensitivity:.075,zoom:1.75,boxSelectionEnabled:!0,container:document.getElementById("cy"),layout:{name:"grid",rows:2,cols:2},style:[{selector:"node[name]",style:{content:"data(name)","text-valign":"center","text-halign":"center","font-size":"8px","font-weight":"bold","border-width":1,"border-color":"#111827","text-wrap":"wrap","text-max-width":10,width:"30px",height:"30px"}},{selector:"edge",style:{width:1.5,"curve-style":"bezier","target-arrow-shape":"triangle","font-size":"10px"}},{selector:".eh-handle",style:{"background-color":"#111287",width:12,height:12,shape:"ellipse","overlay-opacity":0,"border-width":12,"border-opacity":0}},{selector:".eh-hover",style:{"background-color":"#111287"}},{selector:".eh-source",style:{"border-width":2,"border-color":"#111287"}},{selector:".eh-target",style:{"border-width":2,"border-color":"#111287"}},{selector:".eh-preview, .eh-ghost-edge",style:{"background-color":"#111287","line-color":"#111287","target-arrow-color":"#111287","source-arrow-color":"#111287"}},{selector:".eh-ghost-edge.eh-preview-active",style:{opacity:0}}],elements:{nodes:[],edges:[]}});function d(e,t){document.getElementById("alert").innerHTML=` <div class="relative z-10" aria-labelledby="modal-title" role="dialog" id="modalAlert" aria-modal="true">\n    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>\n    <div class="fixed inset-0 z-10 w-screen overflow-y-auto">\n      <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">\n        <div\n          class="relative transform overflow-hidden rounded-lg bg-[#faf0e6] text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">\n  \n          \x3c!-- Cross Icon for Closing --\x3e\n          <div class="absolute top-0 right-0 pt-4 pr-4">\n            <button type="button" id="closeModalAlert"\n              class="text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"\n              aria-label="Close">\n              <span class="sr-only">Close</span>\n              \x3c!-- Cross Icon (SVG) --\x3e\n              <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"\n                stroke="currentColor" aria-hidden="true">\n                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />\n              </svg>\n            </button>\n          </div>\n  \n          <div class="bg-[#faf0e6] px-4 pb-4 pt-5 sm:p-6 sm:pb-4">\n            <div class="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">\n            \n              <h2 class="text-lg text-center font-semibold leading-6 text-gray-900" id="alertTitle">${e}</h2>\n  \n              <div class="mt-2" id="alertBody">\n              <p class="text-center text-lg font-bold">${t}</p>\n              \n              </div>\n  \n              \n        <div class="bg-[#faf0e6] px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">\n          <button type="button" id="alertSubmit"\n            class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">\n            OK\n          </button>\n\n        </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  </div>\n  `,document.getElementById("closeModalAlert").addEventListener("click",(function(){document.getElementById("modalAlert").remove()})),document.getElementById("alertSubmit").addEventListener("click",(function(){document.getElementById("modalAlert").remove()}))}function s(e){e.data("start",!1),e.data("accept",!1),e.data("reject",!1),e.style("border-color","black"),e.style("border-width","1"),null!==document.getElementById("start-state")&&(document.getElementById("start-state").checked=!1),null!==document.getElementById("accept-state")&&(document.getElementById("accept-state").checked=!1),null!==document.getElementById("reject-state")&&(document.getElementById("reject-state").checked=!1),e.id()===t?t=null:e.id()===n?n=null:e.id()===o&&(o=null)}function r(e){e.remove();for(var t=e.style("label").split(","),n=0;n<t.length;n++){var o=e.source().id()+","+t[n].split("(")[1];delete a[o]}c(),console.log("transitionFunction after edge deleted",a)}function i(e){e.data("start")&&(t=null),e.data("accept")&&(n=null),e.data("reject")&&(o=null),e.remove(),c(),console.log(a)}function c(){var e="";null!==document.getElementById("tminput")&&(e=document.getElementById("tminput").value),document.getElementById("control").innerHTML=` <p class="text-center text-lg font-bold">Control Panel</p>\n\n      \n\n      <div class="flex flex-col p-2">\n      \n        <label for="tm" class="text-center text-lg font-semibold">Tape input:</label>\n        <input type="text" name="tm" id="tminput" autocomplete="tm" value="${e}"\n          class="mt-1 p-2 w-full border-gray-300 focus:ring-blue-500 bg-gray-50 rounded-sm text-black font-bold">\n        <button\n          class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2"\n          type="button" id="runtm">Run</button>\n          <button\n          class="hidden text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2"\n          type="button" id="tmhalt">Stop</button>\n      </div>\n      <div id="tmStatusDiv" class=" border-[#FAF0E6] border-2 border-dashed m-2 rounded-md">\n      <p class="text-center text-lg font-semibold" id="tmStatus"></p>\n    </div>\n\n    \n\n`,document.getElementById("runtm").addEventListener("click",(function(){var e=document.getElementById("tminput").value;return""===e?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n      Please enter an input string.\n      </p>')):null===t?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n        Please select a start state.\n        </p>')):null===n?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n        Please select an accept state.\n        </p>')):null===o?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n        Please select a reject state.\n        </p>')):(document.getElementById("tmStatus").innerHTML="",document.getElementById("tmStatusDiv").style.borderColor="#FAF0E6",void new x(e,t,a,[n,o]).run())}))}function u(t){var n=t;e=n;var o=`\n<div class="p-2 m-2" id="${n.id()}">\n\n<div class="flex items-center mb-2">\n<svg class="w-6 h-6 mr-2 cursor-pointer" fill="none" id="mainControlPanel" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>\n</svg>\n<p class="text-lg text-center font-bold text-black">Edge panel</p>\n</div>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 w-full mb-2" type="button" id="addTransition" >Add Transition</button>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 w-full mb-2" type="button" id="deleteTransitions" >Delete Transitions</button>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 w-full mb-2" type="button" id="deleteEdge" >Delete Edge</button>\n\n\n\n</div>\n`;document.getElementById("control").innerHTML=o,document.getElementById("mainControlPanel").addEventListener("click",(function(){c(),l.edges().forEach((e=>{e.unselect()}))})),document.getElementById("addTransition").addEventListener("click",(function(){document.getElementById("modalTransition").classList.remove("hidden")})),document.getElementById("deleteTransitions").addEventListener("click",(function(){document.getElementById("modalTransitionDelete").classList.remove("hidden");const t=`Transitions: "${n.source().data("name")}" to "${n.target().data("name")}"`;deleteTransitionsTitle.textContent=t;var o=e.data("transitions");console.log(o);var a="";if(void 0===o||0===o.length)return document.getElementById("deleteTransitionsBody").innerHTML='<p class="text-center text-lg font-bold">No transitions to delete</p>',void document.getElementById("deleteTransitionsSubmit").classList.add("hidden");document.getElementById("deleteTransitionsSubmit").classList.remove("hidden");for(var l=0;l<o.length;l++){var d=o[l];a+=`\n<div class="transition-item">\n  <input type="checkbox" id="transition${l}" data-index="${l}">\n  <label for="transition${l}">(${d.currentSymbol}, ${d.nextSymbol}, ${d.direction})</label>\n</div>\n`}document.getElementById("deleteTransitionsBody").innerHTML=a})),document.getElementById("deleteEdge").addEventListener("click",(function(){r(n)}))}function m(e){var a=e,r=a.data("start"),u=a.data("accept"),m=a.data("reject"),g=`\n<div class="p-2 t" id="${a.id()}">\n<div class="flex items-center mb-2">\n<svg class="w-6 h-6 mr-2 cursor-pointer" fill="none" id="mainControlPanel" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">\n  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>\n</svg>\n<p class="text-lg text-center font-bold text-black">State panel</p>\n</div>\n<label for="stateName" class="block text-md font-bold text-black">State:</label>\n<input type="text" id="stateName" name="stateName" class="mt-1 p-2 w-full border-gray-300 focus:ring-blue-300 bg-[white] rounded-sm text-black  font-bold" value="${a.data("name")}">\n\n<fieldset class="mt-4">\n<legend class="sr-only">State Type</legend>\n\n<div class="flex items-center mb-4">\n<input id="start-state" type="radio" name="stateType" value="start" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${r?"selected":""}" ${r?"checked":""}>\n<label for="start-state" class="block ms-2 text-sm font-medium text-black">\n  Start State\n</label>\n</div>\n\n<div class="flex items-center mb-4">\n<input id="accept-state" type="radio" name="stateType" value="accept" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${u?"selected":""}" ${u?"checked":""}>\n<label for="accept-state" class="block ms-2 text-sm font-medium text-black">\n  Accept State\n</label>\n</div>\n\n<div class="flex items-center mb-4">\n<input id="reject-state" type="radio" name="stateType" value="reject" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${m?"selected":""}" ${m?"checked":""}>\n<label for="reject-state" class="block ms-2 text-sm font-medium text-black">\n  Reject State\n</label>\n</div>\n\n</fieldset>\n\n<div class="flex justify-center">\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 mb-2 w-full" type="button" id="clearState" >Clear State Type</button>\n</div>\n\n<div class="flex justify-center">\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 mb-2 w-full" type="button" id="deleteStateControl" >Delete State</button>\n</div>\n\n\n</div>\n\n`;document.getElementById("control").innerHTML=g,document.getElementById("mainControlPanel").addEventListener("click",(function(){c(),l.nodes().forEach((e=>{e.unselect()}))})),document.getElementById("start-state").addEventListener("change",(function(){!function(e){l.nodes().forEach((t=>{t!==e&&!0===t.data("start")&&(t.data("start",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("start",!0),e.data("accept",!1),e.data("reject",!1),e.style("border-color","green"),e.style("border-width","3"),e.id()===o?o=null:e.id()===n&&(n=null),t=e.id()}(a)})),document.getElementById("accept-state").addEventListener("change",(function(){!function(e){if(l.edges(`[source = "${e.id()}"]`).length>0)return d("That's a halt state!","Accept states cannot have outgoing edges."),void(document.getElementById("accept-state").checked=!1);l.nodes().forEach((t=>{t!==e&&!0===t.data("accept")&&(t.data("accept",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("accept",!0),e.data("start",!1),e.data("reject",!1),e.style("border-color","blue"),e.style("border-width","3"),e.id()===t?t=null:e.id()===o&&(o=null),n=e.id()}(a)})),document.getElementById("reject-state").addEventListener("change",(function(){!function(e){if(l.edges(`[source = "${e.id()}"]`).length>0)return d("That's a halt state!","Reject states cannot have outgoing edges."),void(document.getElementById("reject-state").checked=!1);l.nodes().forEach((t=>{t!==e&&!0===t.data("reject")&&(t.data("reject",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("reject",!0),e.data("start",!1),e.data("accept",!1),e.style("border-color","red"),e.style("border-width","3"),e.id()===t?t=null:e.id()===n&&(n=null),o=e.id()}(a)})),document.getElementById("stateName").addEventListener("input",(function(){a.data("name",this.value),a.style("content",this.value)})),document.getElementById("clearState").addEventListener("click",(function(){s(a)})),document.getElementById("deleteStateControl").addEventListener("click",(function(){i(a)}))}l.on("remove","edge",(function(e){for(var t=e.target,n=t.style("label").split(","),o=0;o<n.length;o++){var l=t.source().id()+","+n[o].split("(")[1];delete a[l]}console.log(a)})),l.cxtmenu({selector:"edge",menuRadius:80,commands:[{content:'<p class="text-xs">Add transition</p>',select:function(e){l.edges().forEach((t=>{t!==e&&t.unselect()})),l.nodes().forEach((e=>{e.unselect()})),e.select(),setTimeout((()=>{document.getElementById("modalTransition").classList.remove("hidden")}),50)}},{content:'<p class="text-xs">Delete edge</p>',select:function(e){r(e)}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,atMouse:!0,outsideMenuCancel:!1}),l.cxtmenu({selector:"node",menuRadius:50,commands:[{content:'<p class="text-xs">Clear State</p>',select:function(e){s(e)}},{content:'<p class="text-xs">Delete State</p>',select:function(e){i(e)}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,outsideMenuCancel:!1}),l.cxtmenu({selector:"core",menuRadius:70,commands:[{content:'<p class="text-xs">State mode</p>',select:function(e){(b=!b)?(l.on("tap",p),g.textContent="Disable state mode"):(l.off("tap",p),g.textContent="Enable state mode")}},{content:'<p class="text-xs">Draw mode</p>',select:function(e){y?(y=!1,h.disableDrawMode(),document.getElementById("drawMode").textContent="Enable draw mode"):(y=!0,h.enableDrawMode(),document.getElementById("drawMode").textContent="Disable draw mode")}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,outsideMenuCancel:!1}),document.getElementById("fitContent").addEventListener("click",(function(){l.fit()}));var g=document.getElementById("addState"),b=!1;function p(e){if(e.target===l){var t=function(){let e=0;for(;0!==l.$(`#q${e}`).length;)e++;return"q"+e}();l.add({group:"nodes",data:{id:t,name:t},position:{x:e.position.x,y:e.position.y}})}}g.addEventListener("click",(function(){(b=!b)?(l.on("tap",p),g.textContent="Disable state mode"):(l.off("tap",p),g.textContent="Enable state mode")}));var h=l.edgehandles({canConnect:function(e,t){if(e.data("reject")||e.data("accept"))return!1;return!(e.edgesTo(t).length>0)},edgeParams:function(e,t){return{}},preview:!0,hoverDelay:150,snap:!1,snapThreshold:10,snapFrequency:30,noEdgeEventsInDraw:!0,disableBrowserGestures:!0}),y=!1;document.getElementById("drawMode").addEventListener("click",(function(){y?(y=!1,h.disableDrawMode(),document.getElementById("drawMode").textContent="Enable draw mode"):(y=!0,h.enableDrawMode(),document.getElementById("drawMode").textContent="Disable draw mode")})),l.on("tap","node",(function(e){m(e.target)})),l.on("tap","edge",(function(e){u(e.target)})),document.getElementById("deleteTransitionsSubmit").addEventListener("click",(function(){var t=document.querySelectorAll('input[type="checkbox"]');if(0!==t.length){var n=Array.from(t).filter((e=>e.checked));if(0===n.length)return document.getElementById("modal-alert-delete").classList.remove("hidden"),void(document.getElementById("modal-alert-delete").textContent="Please select at least one transition to delete");document.getElementById("modal-alert-delete").classList.add("hidden");var o=n.map((e=>parseInt(e.getAttribute("data-index")))),l=e.data("transitions");o.sort(((e,t)=>t-e)).forEach((t=>{var n=e.source().id()+","+l[t].currentSymbol;delete a[n],l.splice(t,1)})),e.data("transitions",l),console.log("transitions",l),console.log("transitionFunction",a);var d=l.map((e=>`(${e.currentSymbol}, ${e.nextSymbol}, ${e.direction})`)).join(", ");e.style("label",d),document.getElementById("modalTransitionDelete").classList.add("hidden")}else document.getElementById("deleteTransitionsSubmit").classList.add("hidden")})),document.getElementById("closeModalTransition").addEventListener("click",(function(){document.getElementById("modalTransition").classList.add("hidden"),document.getElementById("current-symbol").value="",document.getElementById("next-symbol").value="",document.getElementById("direction").value="",document.getElementById("modal-alert").classList.add("hidden")})),document.getElementById("closeModalTransitionDelete").addEventListener("click",(function(){document.getElementById("modalTransitionDelete").classList.add("hidden"),document.getElementById("modal-alert-delete").classList.add("hidden")})),document.getElementById("addTransitionSubmit").addEventListener("click",(function(){var t=document.getElementById("current-symbol").value,n=document.getElementById("next-symbol").value,o=document.getElementById("direction").value;if(""===t||""===n||""===o)return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent="Please fill in all fields");if(document.getElementById("modal-alert").classList.add("hidden"),"L"!==o&&"R"!==o)return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent="Direction must be L or R");if(s=e.source().id()+","+t,null!=a[s])return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent=`Transition already exists from state "${e.source().data("name")}" with symbol "${t}" `);e.data("transitions")||e.data("transitions",[]);var l=e.data("transitions");l.push({currentSymbol:t,nextSymbol:n,direction:o}),e.data("transitions",l);var d=l.map((e=>`(${e.currentSymbol}, ${e.nextSymbol}, ${e.direction})`)).join(", ");e.style({label:d,"text-wrap":"wrap","text-background-shape":"roundrectangle","font-size":"8px","font-family":"Arial, sans-serif","text-background-color":"#999999","text-background-opacity":.8}),document.getElementById("current-symbol").value="",document.getElementById("next-symbol").value="",document.getElementById("direction").value="";var s=e.source().id()+","+t;a[s]=[e.target().id(),n,o],console.log(a),document.getElementById("modalTransition").classList.add("hidden")}));const f=[{content:"<img src='./assets/stateModeGif.gif' alt='Tour Gif'' /><br/> Welcome to the tour guide! In order to create a state, enable state mode by clicking on the highlighted button. Then click anywhere on the canvas to create a state. For as long as state mode is enabled, you can create as many states as you want. Click next to continue the tour.",title:"State Mode",target:"#addState",order:1,group:"my-first-tour"},{content:"<img src='./assets/stateModeGif2.gif' alt='Tour Gif'' /><br/> Draw mode allows you to create transitions between states. You can enable draw mode by clicking on the highlighted button. Then click on a state and drag to another state to create a transition. You are able to create self loops by dragging from a state to itself.",title:"Draw Mode",target:"#drawMode",order:2,group:"my-first-tour"},{content:"This button allows you to fit the content of the canvas to the screen. Click next to continue the tour.",title:"Fit Content",target:"#fitContent",order:3,group:"my-first-tour"},{content:"The control panel has has different panels depending on what is selected. When a node is selected, the control panel will show the state panel. When an edge is selected, the control panel will show the edge panel. When neither a node or edge is selected, the control panel allows you to run the Turing machine on certain input. Click next to continue the tour.",title:"Control panel",target:"#control",order:4,group:"my-first-tour"},{content:"This is the canvas where you can create your Turing machine. You can zoom in and out of the canvas using the mouse wheel. You can also pan the canvas by clicking and dragging. Click next to continue the tour.",title:"Canvas",target:"#cy",order:5,group:"my-first-tour"},{content:"This is the tape where you can see how the Turing machine processes input. The tape is infinite in both directions. You can now start playing with this platform on your own. Enjoy!",title:"Tape",target:"#tape",order:6,group:"my-first-tour"}],v=new tourguide.TourGuideClient({steps:f});document.getElementById("tour").addEventListener("click",(function(){v.start()})),document.addEventListener("keydown",(function(e){if("Delete"===e.key||"Del"===e.key){var t=l.$(":selected");t.length>0&&t.forEach((e=>{e.isNode()?i(e):e.isEdge()&&r(e)}))}})),l.on("tap",(function(e){e.target===l&&(c(),console.log("Current state of transition function",a),console.log("Current state of initial state",t),console.log("Current state of accept state",n),console.log("Current state of reject state",o))})),l.on("select","edge",(function(t){u(e=t.target)})),l.on("select",(function(e){l.$(":selected").length>1&&(document.getElementById("control").innerHTML='\n        <p class="text-center text-lg font-bold">Control Panel</p>\n        <div class="flex justify-center">\n        <button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="deleteSelected" >Delete Selected</button>\n        </div>\n        ',document.getElementById("deleteSelected").addEventListener("click",(function(){var e=l.$(":selected");e.length>0&&(e.forEach((e=>{e.isNode()?i(e):e.isEdge()&&r(e)})),c())})))}));class x{constructor(e,t,n,o){this.tape=e.split(""),this.currentIdx=0,this.currentState=t,this.transitionFunction=n,this.finalStates=o,this.animationCancelled=!1}async resetNodeColors(){l.nodes().forEach((e=>{e.style("background-color","#999999")}))}async animateStateTransition(e,t){await new Promise(((t,n)=>{this.animationCancelled||l.elements(`#${e}`).animate({style:{"background-color":"purple"}},{duration:250,complete:t,queue:!1})})),await new Promise(((e,n)=>{this.animationCancelled||l.elements(`#${t}`).animate({style:{"background-color":"red"}},{duration:250,complete:e,queue:!1})}))}async step(){var e=this.tape[this.currentIdx];void 0===e&&(this.tape[this.currentIdx]="_",e="_");const t=`${this.currentState},${e}`;if(!(t in this.transitionFunction))return!1;{const[e,n,o]=this.transitionFunction[t];this.tape[this.currentIdx]=n,this.currentIdx+="R"===o?1:-1,this.currentState=e}return!0}async halt(e){const t=this.getTape(),n=this.currentState,o=l.getElementById(n).data("name");var a="";l.getElementById(n).data("accept")?(a="accept",document.getElementById("tmStatusDiv").style.borderColor="green",document.getElementById("tmStatus").innerHTML=`\n          <p class="text-center text-green-600 text-lg font-semibold" id="tmStatus">\n              <span class="text-xl font-bold">Turing machine halted.</span><br>\n              Final tape: ${t}<br>\n              Final state: ${a.toUpperCase()}\n              \n          </p>`):l.getElementById(n).data("reject")?(a="reject",document.getElementById("tmStatusDiv").style.borderColor="red",document.getElementById("tmStatus").innerHTML=`\n          <p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n              <span class="text-xl font-bold">Turing machine halted.</span><br>\n              Final tape: ${t}<br>\n              Final state: ${a.toUpperCase()}\n          </p>`):l.getElementById(n).data("accept")||l.getElementById(n).data("reject")||e?e&&(a="halt",document.getElementById("tmStatusDiv").style.borderColor="red",document.getElementById("tmStatus").innerHTML=`\n          <p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">The turing machine was manually halted.</p>\n          <p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n              Final tape: ${t}<br>\n              Final state: ${o}\n          </p>`):(a="halt",document.getElementById("tmStatusDiv").style.borderColor="red",document.getElementById("tmStatus").innerHTML=`\n          <p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">The turing machine halted. No valid transition for state "${o}" and symbol "${this.tape[this.currentIdx]}".</p>\n          <p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n              Final tape: ${t}<br>\n              Final state: ${o}\n          </p>`),this.animationCancelled=!0}async run(){for(;!this.finalStates.includes(this.currentState);){if(!await this.step())break}this.halt(!1)}getTape(){return this.tape.join("")}}document.getElementById("runtm").addEventListener("click",(function(){var e=document.getElementById("tminput").value;return""===e?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n        Please enter an input string.\n        </p>')):null===t?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n          Please select a start state.\n          </p>')):null===n?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n          Please select an accept state.\n          </p>')):null===o?(document.getElementById("tmStatusDiv").style.borderColor="red",void(document.getElementById("tmStatus").innerHTML='<p class="text-center text-red-600 text-lg font-semibold" id="tmStatus">\n          Please select a reject state.\n          </p>')):(document.getElementById("tmStatus").innerHTML="",document.getElementById("tmStatusDiv").style.borderColor="#FAF0E6",void new x(e,t,a,[n,o]).run())}))}));