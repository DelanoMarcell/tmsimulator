class TuringMachine{constructor(e,t,n,o){this.tape=e.split(""),this.currentIdx=0,this.currentState=t,this.transitionFunction=n,this.finalStates=o}step(){const e=this.tape[this.currentIdx],t=`${this.currentState},${e}`;if(!(t in this.transitionFunction))return!1;{const[e,n,o]=this.transitionFunction[t];this.tape[this.currentIdx]=n,this.currentIdx+="R"===o?1:-1,this.currentState=e}return!0}run(){for(;!this.finalStates.includes(this.currentState)&&this.step(););}getTape(){return this.tape.join("")}}document.addEventListener("DOMContentLoaded",(function(){var e=null,t=null,n=null,o=null,a={},d=window.cy=cytoscape({wheelSensitivity:.075,zoom:1.75,boxSelectionEnabled:!0,container:document.getElementById("cy"),layout:{name:"grid",rows:2,cols:2},style:[{selector:"node[name]",style:{content:"data(name)","text-valign":"center","text-halign":"center","font-size":"8px","font-weight":"bold","border-width":1,"border-color":"#111827","text-wrap":"wrap","text-max-width":10,width:"30px",height:"30px"}},{selector:"edge",style:{width:1.5,"curve-style":"bezier","target-arrow-shape":"triangle","font-size":"10px"}},{selector:".eh-handle",style:{"background-color":"#111287",width:12,height:12,shape:"ellipse","overlay-opacity":0,"border-width":12,"border-opacity":0}},{selector:".eh-hover",style:{"background-color":"#111287"}},{selector:".eh-source",style:{"border-width":2,"border-color":"#111287"}},{selector:".eh-target",style:{"border-width":2,"border-color":"#111287"}},{selector:".eh-preview, .eh-ghost-edge",style:{"background-color":"#111287","line-color":"#111287","target-arrow-color":"#111287","source-arrow-color":"#111287"}},{selector:".eh-ghost-edge.eh-preview-active",style:{opacity:0}}],elements:{nodes:[],edges:[]}});function l(e){e.data("start",!1),e.data("accept",!1),e.data("reject",!1),e.style("border-color","black"),e.style("border-width","1"),null!==document.getElementById("start-state")&&(document.getElementById("start-state").checked=!1),null!==document.getElementById("accept-state")&&(document.getElementById("accept-state").checked=!1),null!==document.getElementById("reject-state")&&(document.getElementById("reject-state").checked=!1),e.id()===t?t=null:e.id()===n?n=null:e.id()===o&&(o=null)}function r(e){e.remove();var t=e.style("label").split(",");console.log("transitions",t),console.log("transitions length",t.length);for(var n=0;n<t.length;n++){var o=e.source().id()+","+t[n].split("(")[1];delete a[o]}console.log(a),console.log("transition stored in edge",e.data("transitions"))}function i(e){e.data("start")&&(t=null),e.data("accept")&&(n=null),e.data("reject")&&(o=null),e.remove(),console.log(a)}d.on("remove","edge",(function(e){for(var t=e.target,n=t.style("label").split(","),o=0;o<n.length;o++){var d=t.source().id()+","+n[o].split("(")[1];delete a[d]}console.log(a),console.log("transition stored in edge",t.data("transitions"))})),d.cxtmenu({selector:"edge",menuRadius:80,commands:[{content:'<p class="text-xs">Add transition</p>',select:function(e){d.edges().forEach((t=>{t!==e&&t.unselect()})),e.select(),setTimeout((()=>{document.getElementById("modalTransition").classList.remove("hidden")}),50)}},{content:'<p class="text-xs">Delete edge</p>',select:function(e){r(e)}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,atMouse:!0,outsideMenuCancel:!1}),d.cxtmenu({selector:"node",menuRadius:50,commands:[{content:'<p class="text-xs">Clear State</p>',select:function(e){l(e)}},{content:'<p class="text-xs">Delete State</p>',select:function(e){i(e)}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,outsideMenuCancel:!1}),d.cxtmenu({selector:"core",menuRadius:70,commands:[{content:'<p class="text-xs">State mode</p>',select:function(e){(c=!c)?(d.on("tap",u),s.textContent="Disable state mode"):(d.off("tap",u),s.textContent="Enable state mode")}},{content:'<p class="text-xs">Draw mode</p>',select:function(e){g?(g=!1,m.disableDrawMode(),document.getElementById("drawMode").textContent="Enable draw mode"):(g=!0,m.enableDrawMode(),document.getElementById("drawMode").textContent="Disable draw mode")}}],fillColor:"rgba(0, 0, 0, 0.55)",activeFillColor:"rgb(17, 24, 39)",activePadding:20,indicatorSize:24,separatorWidth:3,spotlightPadding:4,adaptativeNodeSpotlightRadius:!1,minSpotlightRadius:24,maxSpotlightRadius:38,openMenuEvents:"cxttapstart taphold",itemColor:"white",itemTextShadowColor:"transparent",zIndex:9999,outsideMenuCancel:!1}),document.getElementById("fitContent").addEventListener("click",(function(){d.fit()}));var s=document.getElementById("addState"),c=!1;function u(e){if(e.target===d){var t=function(){let e=0;for(;0!==d.$(`#q${e}`).length;)e++;return"q"+e}();d.add({group:"nodes",data:{id:t,name:t},position:{x:e.position.x,y:e.position.y}})}}s.addEventListener("click",(function(){(c=!c)?(d.on("tap",u),s.textContent="Disable state mode"):(d.off("tap",u),s.textContent="Enable state mode")}));var m=d.edgehandles({canConnect:function(e,t){return!(e.edgesTo(t).length>0)},edgeParams:function(e,t){return{}},preview:!0,hoverDelay:150,snap:!0,snapThreshold:10,snapFrequency:30,noEdgeEventsInDraw:!0,disableBrowserGestures:!0}),g=!1;document.getElementById("drawMode").addEventListener("click",(function(){g?(g=!1,m.disableDrawMode(),document.getElementById("drawMode").textContent="Enable draw mode"):(g=!0,m.enableDrawMode(),document.getElementById("drawMode").textContent="Disable draw mode")})),d.on("tap","node",(function(e){var a=e.target,r=a.data("start"),s=a.data("accept"),c=a.data("reject"),u=`\n<div class="p-2 t" id="${a.id()}">\n<p class="text-lg text-center font-bold text-black">State panel</p>\n<label for="stateName" class="block text-sm font-bold text-black">State:</label>\n<input type="text" id="stateName" name="stateName" class="mt-1 p-2 w-full border-gray-300 focus:ring-blue-300 bg-[white] rounded-sm text-black  font-bold" value="${a.data("name")}">\n\n<fieldset class="mt-4">\n<legend class="sr-only">State Type</legend>\n\n<div class="flex items-center mb-4">\n  <input id="start-state" type="radio" name="stateType" value="start" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${r?"selected":""}" ${r?"checked":""}>\n  <label for="start-state" class="block ms-2 text-sm font-medium text-black">\n    Start State\n  </label>\n</div>\n\n<div class="flex items-center mb-4">\n  <input id="accept-state" type="radio" name="stateType" value="accept" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${s?"selected":""}" ${s?"checked":""}>\n  <label for="accept-state" class="block ms-2 text-sm font-medium text-black">\n    Accept State\n  </label>\n</div>\n\n<div class="flex items-center mb-4">\n  <input id="reject-state" type="radio" name="stateType" value="reject" class="w-4 h-4 m-2 border-gray-300 focus:ring-2 focus:ring-blue-300 ${c?"selected":""}" ${c?"checked":""}>\n  <label for="reject-state" class="block ms-2 text-sm font-medium text-black">\n    Reject State\n  </label>\n</div>\n\n</fieldset>\n\n<div class="flex justify-center">\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="clearState" >Clear State Type</button>\n</div>\n\n<div class="flex justify-center">\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="deleteStateControl" >Delete State</button>\n</div>\n</div>\n\n`;document.getElementById("control").innerHTML=u,document.getElementById("start-state").addEventListener("change",(function(){var e;e=a,d.nodes().forEach((t=>{t!==e&&!0===t.data("start")&&(t.data("start",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("start",!0),e.data("accept",!1),e.data("reject",!1),e.style("border-color","green"),e.style("border-width","3"),e.id()===o?o=null:e.id()===n&&(n=null),t=e.id()})),document.getElementById("accept-state").addEventListener("change",(function(){var e;e=a,d.nodes().forEach((t=>{t!==e&&!0===t.data("accept")&&(t.data("accept",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("accept",!0),e.data("start",!1),e.data("reject",!1),e.style("border-color","red"),e.style("border-width","3"),e.id()===t?t=null:e.id()===o&&(o=null),n=e.id()})),document.getElementById("reject-state").addEventListener("change",(function(){var e;e=a,d.nodes().forEach((t=>{t!==e&&!0===t.data("reject")&&(t.data("reject",!1),t.style("border-color","black"),t.style("border-width","1"))})),e.data("reject",!0),e.data("start",!1),e.data("accept",!1),e.style("border-color","red"),e.style("border-width","3"),e.id()===t?t=null:e.id()===n&&(n=null),o=e.id()})),document.getElementById("stateName").addEventListener("input",(function(){a.data("name",this.value),a.style("content",this.value)})),document.getElementById("clearState").addEventListener("click",(function(){l(a)})),document.getElementById("deleteStateControl").addEventListener("click",(function(){i(a)}))})),d.on("tap","edge",(function(t){var n=t.target;e=n;var o=`\n<div class="p-2" id="${n.id()}">\n\n<p class="text-lg text-center font-bold text-black">Edge panel</p>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="addTransition" >Add Transition</button>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="deleteTransitions" >Delete Transitions</button>\n\n<button class="text-white bg-[#111827] hover:bg-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-[#111827] dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800 m-2" type="button" id="deleteEdge" >Delete Edge</button>\n\n</div>\n`;document.getElementById("control").innerHTML=o,document.getElementById("addTransition").addEventListener("click",(function(){document.getElementById("modalTransition").classList.remove("hidden")})),document.getElementById("deleteTransitions").addEventListener("click",(function(){document.getElementById("modalTransitionDelete").classList.remove("hidden");const t=`Transitions: "${n.source().data("name")}" to "${n.target().data("name")}"`;deleteTransitionsTitle.textContent=t;var o=e.data("transitions");console.log(o);var a="";if(void 0===o||0===o.length)return document.getElementById("deleteTransitionsBody").innerHTML='<p class="text-center text-lg font-bold">No transitions to delete</p>',void document.getElementById("deleteTransitionsSubmit").classList.add("hidden");document.getElementById("deleteTransitionsSubmit").classList.remove("hidden");for(var d=0;d<o.length;d++){var l=o[d];a+=`\n  <div class="transition-item">\n    <input type="checkbox" id="transition${d}" data-index="${d}">\n    <label for="transition${d}">(${l.currentSymbol}, ${l.nextSymbol}, ${l.direction})</label>\n  </div>\n`}document.getElementById("deleteTransitionsBody").innerHTML=a})),document.getElementById("deleteEdge").addEventListener("click",(function(){r(n)}))})),document.getElementById("deleteTransitionsSubmit").addEventListener("click",(function(){var t=document.querySelectorAll('input[type="checkbox"]');if(0!==t.length){var n=Array.from(t).filter((e=>e.checked));if(0===n.length)return document.getElementById("modal-alert-delete").classList.remove("hidden"),void(document.getElementById("modal-alert-delete").textContent="Please select at least one transition to delete");document.getElementById("modal-alert-delete").classList.add("hidden");var o=n.map((e=>parseInt(e.getAttribute("data-index")))),d=e.data("transitions");o.sort(((e,t)=>t-e)).forEach((t=>{var n=e.source().id()+","+d[t].currentSymbol;delete a[n],d.splice(t,1)})),e.data("transitions",d),console.log("transitions",d),console.log("transitionFunction",a);var l=d.map((e=>`(${e.currentSymbol}, ${e.nextSymbol}, ${e.direction})`)).join(", ");e.style("label",l),document.getElementById("modalTransitionDelete").classList.add("hidden")}else document.getElementById("deleteTransitionsSubmit").classList.add("hidden")})),document.getElementById("closeModalTransition").addEventListener("click",(function(){document.getElementById("modalTransition").classList.add("hidden"),document.getElementById("current-symbol").value="",document.getElementById("next-symbol").value="",document.getElementById("direction").value="",document.getElementById("modal-alert").classList.add("hidden")})),document.getElementById("closeModalTransitionDelete").addEventListener("click",(function(){document.getElementById("modalTransitionDelete").classList.add("hidden"),document.getElementById("modal-alert-delete").classList.add("hidden")})),document.getElementById("addTransitionSubmit").addEventListener("click",(function(){var t=document.getElementById("current-symbol").value,n=document.getElementById("next-symbol").value,o=document.getElementById("direction").value;if(""===t||""===n||""===o)return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent="Please fill in all fields");if(document.getElementById("modal-alert").classList.add("hidden"),"L"!==o&&"R"!==o)return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent="Direction must be L or R");if(r=e.source().id()+","+t,null!=a[r])return document.getElementById("modal-alert").classList.remove("hidden"),void(document.getElementById("modal-alert").textContent=`Transition already exists from state "${e.source().data("name")}" with symbol "${t}" `);e.data("transitions")||e.data("transitions",[]);var d=e.data("transitions");d.push({currentSymbol:t,nextSymbol:n,direction:o}),e.data("transitions",d);var l=d.map((e=>`(${e.currentSymbol}, ${e.nextSymbol}, ${e.direction})`)).join(", ");e.style({label:l,"text-wrap":"wrap","text-background-shape":"roundrectangle","font-size":"8px","font-family":"Arial, sans-serif","text-background-color":"#999999","text-background-opacity":.8}),document.getElementById("current-symbol").value="",document.getElementById("next-symbol").value="",document.getElementById("direction").value="";var r=e.source().id()+","+t;a[r]=[e.target().id(),n,o],console.log(a),document.getElementById("modalTransition").classList.add("hidden")}));const h=[{content:"<img src='./assets/stateModeGif.gif' alt='Tour Gif'' /><br/> Welcome to the tour guide! In order to create a state, enable state mode by clicking on the highlighted button. Then click anywhere on the canvas to create a state. For as long as state mode is enabled, you can create as many states as you want. Click next to continue the tour.",title:"State Mode",target:"#addState",order:1,group:"my-first-tour"},{content:"<img src='./assets/stateModeGif2.gif' alt='Tour Gif'' /><br/> Draw mode allows you to create transitions between states. You can enable draw mode by clicking on the highlighted button. Then click on a state and drag to another state to create a transition. You are able to create self loops by dragging from a state to itself.",title:"Draw Mode",target:"#drawMode",order:2,group:"my-first-tour"},{content:"This button allows you to fit the content of the canvas to the screen. Click next to continue the tour.",title:"Fit Content",target:"#fitContent",order:3,group:"my-first-tour"},{content:"This is where you create transition functions for your Turing machine. You can also rename states, set the start state, accept state and reject state.To see what you can do here, click on a state to see the control panel options for that state,and click on an edge to see the control panel options for that edge. Click next to continue the tour.",title:"Control panel",target:"#control",order:4,group:"my-first-tour"},{content:"This is the canvas where you can create your Turing machine. You can zoom in and out of the canvas using the mouse wheel. You can also pan the canvas by clicking and dragging. Click next to continue the tour.",title:"Canvas",target:"#cy",order:5,group:"my-first-tour"},{content:"This is the tape where you can see how the Turing machine processes input. The tape is infinite in both directions. You can now start playing with this platform on your own. Enjoy!",title:"Tape",target:"#tape",order:6,group:"my-first-tour"}],b=new tourguide.TourGuideClient({steps:h});document.getElementById("tour").addEventListener("click",(function(){b.start()})),document.addEventListener("keydown",(function(e){if("Delete"===e.key||"Del"===e.key){var t=d.$(":selected");t.length>0&&t.forEach((e=>{e.isNode()?i(e):e.isEdge()&&r(e)}))}})),d.on("tap",(function(e){e.target===d&&(document.getElementById("control").innerHTML='<p class="text-center text-lg font-bold">Control Panel</p>',console.log("Current state of transition function",a),console.log("Current state of initial state",t),console.log("Current state of accept state",n),console.log("Current state of reject state",o))})),d.on("select","edge",(function(t){e=t.target}))}));